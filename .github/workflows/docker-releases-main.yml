name: Get the latest Docker release for main
on:
  schedule:
    - cron:  '35 7 * * 3'

jobs:
  get-docker-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Fetch latest Docker release
        id: fetch-latest-release
        run: |
          git clone https://github.com/docker/docker-ce docker
          versionMain=$(git -C docker ls-remote --tags origin | cut -f2 | sed -n "/refs\/tags\/v[0-9]*.[0-9]*.[0-9]*$/s/^refs\/tags\/v//p" | egrep -v -e '(beta|rc)' | sort -ruV | head -n1)
          commitMain=$(git -C docker rev-parse --short=7 v${versionMain})
          rm -rf docker
          echo ::set-output name=VERSION_MAIN::$(echo ${versionMain})
          echo ::set-output name=COMMIT_MAIN::$(echo ${commitMain})
          echo ::set-output name=BASE_BRANCH_MAIN::main
      - name: Set up Flatcar SDK
        id: setup-flatcar-sdk
        run: .github/workflows/setup-flatcar-sdk.sh
      - name: Apply patch for main
        id: apply-patch-main
        env:
          TARGET: main
          BASE_BRANCH: ${{ steps.fetch-latest-release.outputs.BASE_BRANCH_MAIN }}
          VERSION_NEW: ${{ steps.fetch-latest-release.outputs.VERSION_MAIN }}
          COMMIT_HASH: ${{ steps.fetch-latest-release.outputs.COMMIT_MAIN }}
          PATH: ${{ steps.setup-flatcar-sdk.outputs.path }}
        run: .github/workflows/docker-apply-patch.sh
      - name: Create pull request for main
        uses: peter-evans/create-pull-request@v3
        if: steps.apply-patch-main.outputs.UPDATE_NEEDED == 1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: ${{ steps.fetch-latest-release.outputs.BASE_BRANCH_MAIN }}
          branch: docker-${{ steps.fetch-latest-release.outputs.VERSION_MAIN }}-main
          author: Flatcar Buildbot <buildbot@flatcar-linux.org>
          committer: Flatcar Buildbot <buildbot@flatcar-linux.org>
          title: Upgrade Docker in main from ${{ steps.apply-patch-main.outputs.VERSION_OLD }} to ${{ steps.fetch-latest-release.outputs.VERSION_MAIN }}
          commit-message: Upgrade Docker in main from ${{ steps.apply-patch-main.outputs.VERSION_OLD }} to ${{ steps.fetch-latest-release.outputs.VERSION_MAIN }}
          body: Upgrade Docker in main from ${{ steps.apply-patch-main.outputs.VERSION_OLD }} to ${{ steps.fetch-latest-release.outputs.VERSION_MAIN }}
          labels: main
